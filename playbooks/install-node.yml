---
- hosts: all
  become: true
  tasks:
  #Install dependencies.
  - name: Install pre-requisite packages
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - curl
      - apt-transport-https
      - ca-certificates
      - gnupg-agent
      - software-properties-common

  #Add repo.
  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  #Install docker and its dependencies.
  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    with_items:
      - containerd.io
      - docker-ce
      - docker-ce-cli
    notify:
      - docker status

  #Add vagrant user and add to docker group.
  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  #Remove swapfile as Kubelet will not start if the system has swap enabled.
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  #Disable swapfile as Kubelet will not start if the system has swap enabled.
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  #Installing kubelet, kubeadm and kubectl using the below code.
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - kubelet
      - kubeadm
      - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  #Join the nodes to the Kubernetes cluster.
  - name: Copy the join command to server location
    copy:
      src: join-command
      dest: /tmp/join-command.sh
      mode: 0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh
 
  #Setup a handler for checking Docker daemon.
  handlers:
    - name: docker status
      service: name=docker state=started
